#########################################################################################
# TODO: Fill this template out in addition to the code implementation in chatbot.py!    #
#                                                                                       #
# Each "Creative" feature in the rubric has a section below.                            #
# For every feature you chose to implement, replace the "NO" at the end of the relevant #
# lines with "YES".                                                                     #
#                                                                                       #
# You will only receive credit for the features you mark as YES below!                  #
#########################################################################################

FEATURE - Identifying movies without quotation marks and correct capitalization (part 1): NO
FEATURE - Identifying movies without quotation marks and correct capitalization (part 2): YES
FEATURE - Alternate/foreign titles: YES
FEATURE - Disambiguation (part 1): YES
FEATURE - Fine-grained sentiment extraction: YES
FEATURE - Spell-correcting fallback for find_movies_by_title: NO
FEATURE - Extracting sentiment with multiple-movie input: YES
FEATURE - Disambiguation (part 2): YES
FEATURE - Dialogue for spell-checking: YES
FEATURE - Dialogue for disambiguation: YES
FEATURE - Communicating sentiments and movies extracted to the user given multiple-movie input: NO
FEATURE - Responding to arbitrary input: YES
FEATURE - Identifying and responding to emotions: YES
FEATURE - Chatbot theme/persona: YES
Did not implement any of the above features: NO

#########################################################################################
# Team Contributions                                                                    #
#########################################################################################
Katie - I implemented binarize(), recommend(), and similarity(). For creative mode, I implemented edit_distance(), find_movies_closest_to_title(), and disambiguation().
Sheng - I implemented the process() function (as well as the greeting, goodbye, and intro messages). For creative mode, I implemented "responding to arbitrary input," "identifying and responding to emotions," and "chatbot theme/persona."
Albert - I implemented the sentiment-related functions (extract_sentiment starter/creative extract_sentiment_for_movies)
Stella - In starter mode, I implemented extract_titles() and find_movies_by_title(). In creative mode, I implemented extensions of find_movies_by_title(): identifying movies without correct capitalization (part 2), alternate titles, foreign titles, and disambiguation (part 1). I also completed the ethics question.

#########################################################################################
# Ethics Question                                                                  #
#########################################################################################
TODO: Please answer the following question:

Humans are quick to anthropomorphize chatbots, like ELIZA. 
In the 1960’s, users’ trust in ELIZA raised numerous concerns that humans would believe the system’s advice, 
even if ELIZA did not actually know what it was talking about. Newer chatbots are built using neural networks, 
like those you implemented in PA5. These neural networks are trained on enormous sets of data, from online 
sources like Reddit and Twitter. These sources are interlaced with offensive text that are often reproduced 
in chatbot responses. Furthermore, the newest advanced models, like GPT-3, have produced responses that appear 
that they were written by a human.

What are some possible ramifications of anthropomorphizing chatbot systems? Can you think of any ways that 
engineers could ensure that users can easily distinguish the chatbot responses from those of a human?

Just as users believed ELIZA's advice in the 1960's, it's more likely that users will believe the "humanness" of an anthropomorphized chatbot system. At the very least, users might expect better performance from a bot that appears more human and therefore should be more capable of responding as a real human would, which could lead to greater user dissatisfaction when that bot fails to meet these expectations. Specifically, if users believe, to some extent, the humanity of a bot, then bots that have not been properly built (e.g. those that reflect the offensive text they are trained on) could induce a greater negative reaction in users--one of personal offense or even harm. There is also much at stake with bots that are tasked with more interpersonally valent tasks--bots that are responsible for mental health support, for example. With these types of services, it is crucial that the bot establishes trust and is able to navigate more complex conversations--however, for a myriad of reasons (because it is difficult to make bots that accommodate all users' preferences for relationship norms, or because it is difficult for bots to handle the nuance of these tasks), upon their failure users might be left with reactions ranging from disappointment to genuine hurt, depending on how much they bought into the "realness" of the bot. To take things one level deeper, it is also possible that once these illusions of humanity are shattered, users might feel further deceived or betrayed.
In order to help users differentiate between bots and humansm, engineers could write responses that mimic stereotypically "robotic" voices. For example, having a bot narrate in third person rather than the "human" first person might flag in a user's mind that the bot is not quite human. In general, engineers could also limit the number of anthropomorphic features they allow a bot to have--features including, but not limited to, having a human name, using colloquial language, responding after a small delay (as if typing or thinking), or employing humor. 

#########################################################################################
# Optional: Feel free to include anything else that you want us to know about your      #
# implementation!                                                                       #
#########################################################################################
(optional) If you have anything else you want to add, delete this and type it here!
